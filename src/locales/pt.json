{
  "header": {
    "title": "√Årvore de Decis√£o",
    "home": "In√≠cio",
    "language": "üåê Idioma",
    "theme": {
      "dark": "üåô Escuro",
      "light": "‚òÄÔ∏è Claro"
    }
  },
  "hero": {
    "title": "Explorando o Mundo das √Årvores de Decis√£o",
    "subtitle": "Uma introdu√ß√£o visual ao aprendizado de m√°quina"
  },
  "section-understanding": {
    "title": "Entendendo √Årvores de Decis√£o e Poda",
    "intro": {
      "welcome": "Bem-vindo ao nosso {guide} ‚Äî uma das ferramentas mais {powerful} no campo da intelig√™ncia artificial e da ci√™ncia de dados.",
      "guide": "guia interativo sobre √°rvores de decis√£o",
      "powerful": "intuitivas e poderosas",
      "purpose": "Este site foi criado para ajudar voc√™ a compreender, de forma {visual}, como essas estruturas funcionam, como s√£o constru√≠das, e por que s√£o t√£o √∫teis para resolver problemas de {classification} e {regression}.",
      "visual": "visual e acess√≠vel",
      "classification": "classifica√ß√£o",
      "regression": "regress√£o",
      "pruning": "Al√©m disso, exploraremos um conceito essencial para melhorar o desempenho das √°rvores: {pruningConcept}. Ela reduz a complexidade do modelo, evita o {overfitting} (sobreajuste) e torna as previs√µes mais confi√°veis com dados novos.",
      "pruningConcept": "a poda",
      "overfitting": "overfitting",
      "conclusion": "Aqui, voc√™ encontrar√° {clear}, {visual_examples} e {demonstrations} para construir e otimizar √°rvores de decis√£o. Quer voc√™ seja iniciante ou j√° tenha experi√™ncia, nosso objetivo √© tornar esses conceitos simples, interativos e aplic√°veis.",
      "clear": "explica√ß√µes claras",
      "visual_examples": "exemplos visuais",
      "demonstrations": "demonstra√ß√µes passo a passo"
    }
  },
  "section-what-is": {
    "title": "O que √©?",
    "definition": "Uma {decision_tree} √© um modelo preditivo que representa uma s√©rie de decis√µes estruturadas em forma de √°rvore, onde cada {internal_node} corresponde a uma pergunta ou condi√ß√£o baseada nas caracter√≠sticas dos dados, e cada {branch} leva a uma poss√≠vel resposta ou divis√£o. As {leaves} da √°rvore indicam o resultado final, como uma classe ou valor num√©rico. Esse modelo √© amplamente utilizado em tarefas de {classification} e {regression} devido √† sua interpreta√ß√£o intuitiva: ele simula um processo de tomada de decis√£o sequencial, em que seguimos um caminho l√≥gico com base nas entradas at√© chegar a uma conclus√£o.",
    "decision_tree": "√°rvore de decis√£o",
    "internal_node": "n√≥ interno",
    "branch": "ramo",
    "leaves": "folhas",
    "classification": "classifica√ß√£o",
    "regression": "regress√£o"
  },
  "section-prediction": {
    "title": "Como funciona a previs√£o em uma √°rvore de decis√£o",
    "description": "Durante o processo de {prediction}, a √°rvore de decis√£o recebe uma nova entrada (ou amostra) e a percorre do {root_to_leaf}, seguindo as condi√ß√µes definidas em cada ponto de decis√£o. A cada etapa, ela analisa o valor de uma {feature} da entrada e escolhe o {corresponding_branch} com base na condi√ß√£o (por exemplo, se o valor √© menor ou maior que um certo limite). Esse caminho √© {unique} e leva diretamente at√© uma {leaf}, onde est√° registrada a classe prevista (em classificadores) ou um valor num√©rico (em modelos de regress√£o). O processo √© {fast_interpretable}, funcionando como uma sequ√™ncia l√≥gica de decis√µes que culmina em uma conclus√£o final.",
    "prediction": "previs√£o",
    "root_to_leaf": "n√≥ raiz at√© uma folha",
    "feature": "feature",
    "corresponding_branch": "ramo correspondente",
    "unique": "√∫nico",
    "leaf": "folha",
    "fast_interpretable": "r√°pido, direto e interpret√°vel"
  },
  "section-gini": {
    "title": "Como s√£o escolhidos os cortes?",
    "description": "Em uma √°rvore de decis√£o para classifica√ß√£o bin√°ria, os cortes s√£o escolhidos com base na {purity} das regi√µes criadas ap√≥s cada divis√£o. O algoritmo busca, de forma gulosa, a melhor divis√£o naquele instante ‚Äî ou seja, escolhe a caracter√≠stica e o ponto de corte que mais aumentam a pureza dos subconjuntos gerados.",
    "purity": "pureza",
    "purity_explanation": "A pureza de uma regi√£o √© uma medida de qu√£o homog√™neas s√£o as classes dentro dela. Se todos os exemplos em uma regi√£o pertencem √† mesma classe, essa regi√£o √© considerada pura. Para quantificar essa pureza, usamos m√©tricas como a {entropy} e o {gini_index}.",
    "entropy": "Entropia",
    "gini_index": "√çndice Gini",
    "metrics_behavior": "Essas m√©tricas atingem seus valores m√≠nimos (zero) quando todos os exemplos s√£o da mesma classe (propor√ß√£o 0 ou 1), e valores m√°ximos quando h√° equil√≠brio entre as classes (propor√ß√£o 0.5), ou seja, quando a incerteza √© maior. O algoritmo calcula o ganho de pureza antes e depois de cada poss√≠vel divis√£o ‚Äî chamado de {information_gain} (com entropia) ou {gini_gain} ‚Äî e escolhe o corte que mais aumenta esse ganho.",
    "information_gain": "Ganho de Informa√ß√£o",
    "gini_gain": "Ganho de Gini",
    "process_conclusion": "Esse processo √© repetido recursivamente, criando uma segmenta√ß√£o bin√°ria do espa√ßo, at√© que um crit√©rio de parada seja atingido, como o n√∫mero m√≠nimo de pontos por regi√£o.",
    "interaction_hint": "Passe o mouse sobre o gr√°fico para ver os valores espec√≠ficos de entropia e Gini para cada propor√ß√£o de classe positiva.",
    "chart_labels": {
      "x_axis": "Propor√ß√£o da classe positiva (p)",
      "y_axis": "Pureza (Entropia ou Gini)",
      "entropy_legend": "Entropia",
      "gini_legend": "Gini",
      "entropy_tooltip": "Entropia: {value}",
      "gini_tooltip": "Gini: {value}"
    }
  },
  "page": {
    "testTitle": "P√°gina de Teste",
    "step": "Passo {number}",
    "stage": "Etapa {number}"
  },
  "cutoffs": {
    "feature_label": "Feature {number}",
    "characteristic": "Caracter√≠stica:",
    "value_range": "Faixa de valores:",
    "cutoff_point": "Ponto de corte:",
    "loading": "Carregando...",
    "loading_data": "Carregando dados...",
    "error_loading": "‚ùå Erro ao carregar os dados",
    "city_comparison": "Sacramento (p√∫rpura) vs San Francisco (verde)",
    "steps": {
      "total_rooms": {
        "title": "Total de Quartos",
        "description": "Esta feature representa o n√∫mero total de quartos em cada propriedade. √â uma caracter√≠stica fundamental que captura o tamanho da propriedade. Propriedades com mais quartos tendem a ter caracter√≠sticas diferentes e esta informa√ß√£o √© valiosa para o modelo. Observe como esta feature se distribui nos dados e como estabelecemos um ponto de corte para binarizar esta caracter√≠stica cont√≠nua.",
        "axis_label": "Total de Quartos"
      },
      "total_bedrooms": {
        "title": "Quartos de Dormir",
        "description": "Esta feature captura especificamente os quartos de dormir, diferindo da feature anterior que inclui todos os tipos de quartos. √â uma caracter√≠stica importante para determinar a capacidade habitacional da propriedade. Esta feature fornece informa√ß√£o espec√≠fica sobre a funcionalidade residencial do im√≥vel.",
        "axis_label": "Total de Quartos de Dormir"
      },
      "households": {
        "title": "Densidade de Domic√≠lios",
        "description": "Esta feature representa a quantidade de domic√≠lios por regi√£o, capturando aspectos de densidade populacional e urbaniza√ß√£o. √â uma caracter√≠stica contextual importante que reflete o ambiente onde a propriedade est√° localizada. Esta informa√ß√£o demogr√°fica √© valiosa para caracterizar o tipo de √°rea.",
        "axis_label": "N√∫mero de Domic√≠lios"
      },
      "median_house_value": {
        "title": "Valor Mediano das Casas",
        "description": "Esta feature representa o valor mediano das casas na regi√£o. √â uma caracter√≠stica econ√¥mica importante que reflete o mercado imobili√°rio local. Esta feature captura informa√ß√µes sobre o poder aquisitivo e padr√£o socioecon√¥mico da √°rea onde a propriedade est√° localizada.",
        "axis_label": "Valor Mediano (USD)"
      }
    }
  },
  "scatterplot": {
    "frequency": "Frequ√™ncia",
    "value": "Valor",
    "cutoff_tooltip": "valor < {value}",
    "point_tooltip": {
      "property_of": "Propriedade de {city}",
      "value": "Valor: {value}",
      "frequency": "Frequ√™ncia: ~{frequency} propriedades similares",
      "below_cutoff": "Abaixo do ponto de corte",
      "above_cutoff": "Acima do ponto de corte"
    }
  },
  "scroll": {
    "block1": {
      "title": "Etapa {number}",
      "content": "Texto para a etapa {number}. Lorem ipsum dolor sit amet consectetur adipisicing elit."
    },
    "block2": {
      "title": "Bloco 2 - Etapa {number}",
      "content": "Conte√∫do diferente para o bloco 2 - etapa {number}. Lorem ipsum dolor sit amet consectetur adipisicing elit."
    }
  }
}
